<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.2.0">
  <Workflow xmlns:q2="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q3="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q7="clr-namespace:Bonsai.Aruco;assembly=Bonsai.Aruco" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q5="clr-namespace:Bonsai.Video;assembly=Bonsai.Video" xmlns:q4="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:q6="clr-namespace:Bonsai.Audio;assembly=Bonsai.Audio" xmlns:q1="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="NestedWorkflow">
        <Name>Acquisition</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:VideoWriter">
                <q1:FileName>eye.avi</q1:FileName>
                <q1:Suffix>None</q1:Suffix>
                <q1:Buffered>true</q1:Buffered>
                <q1:Overwrite>false</q1:Overwrite>
                <q1:FourCC>FMP4</q1:FourCC>
                <q1:FrameRate>30</q1:FrameRate>
                <q1:FrameSize>
                  <q1:Width>0</q1:Width>
                  <q1:Height>0</q1:Height>
                </q1:FrameSize>
                <q1:ResizeInterpolation>NearestNeighbor</q1:ResizeInterpolation>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q2:MatrixWriter">
                <q2:Path>\\.\pipe\worldaudio</q2:Path>
                <q2:Suffix>None</q2:Suffix>
                <q2:Overwrite>false</q2:Overwrite>
                <q2:Layout>ColumnMajor</q2:Layout>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:ImageWriter">
                <q1:Path>\\.\pipe\worldvideo</q1:Path>
                <q1:Suffix>None</q1:Suffix>
                <q1:Overwrite>false</q1:Overwrite>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:PythonSink">
                <q3:Script>import os
import clr
clr.AddReference("Bonsai.System")
from Bonsai.IO import PathHelper, PathSuffix

filename = r'world.avi'

def process(value):
  path = filename
  os.system(r'ffmpeg -y -f rawvideo -vcodec rawvideo -s 1280x720 -pix_fmt bgr24 -r 100/3 -i \\.\pipe\worldvideo -ar 44100 -ac 1 -f s16le -i \\.\pipe\worldaudio -vb 20M -vcodec mpeg4 {0}'.format(path))
</q3:Script>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q1:Grayscale" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item1</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Value</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Timer">
                <DueTime>PT3S</DueTime>
                <Period>PT0S</Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Value</Selector>
            </Expression>
            <Expression xsi:type="q4:CsvWriter">
              <q4:FileName>world.csv</q4:FileName>
              <q4:Append>false</q4:Append>
              <q4:Overwrite>false</q4:Overwrite>
              <q4:Suffix>None</q4:Suffix>
              <q4:IncludeHeader>false</q4:IncludeHeader>
              <q4:Selector>Source.Timestamp</q4:Selector>
            </Expression>
            <Expression xsi:type="q4:CsvWriter">
              <q4:FileName>eye.csv</q4:FileName>
              <q4:Append>false</q4:Append>
              <q4:Overwrite>false</q4:Overwrite>
              <q4:Suffix>None</q4:Suffix>
              <q4:IncludeHeader>false</q4:IncludeHeader>
              <q4:Selector>Source.Timestamp</q4:Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Slice">
                <Start>0</Start>
                <Step>3</Step>
                <Stop xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Timestamp" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item2</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q5:VideoCaptureDevice">
                <q5:Index>1</q5:Index>
                <q5:Format>
                  <q5:FrameSize>
                    <q5:Width>640</q5:Width>
                    <q5:Height>480</q5:Height>
                  </q5:FrameSize>
                  <q5:AverageFrameRate>30</q5:AverageFrameRate>
                  <q5:MaximumFrameRate>30</q5:MaximumFrameRate>
                  <q5:BitCount>16</q5:BitCount>
                </q5:Format>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Sample" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="CombineLatest" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q6:AudioCapture">
                <q6:DeviceName>Microphone (Realtek High Defini</q6:DeviceName>
                <q6:Frequency>44100</q6:Frequency>
                <q6:BufferLength>10</q6:BufferLength>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Timestamp" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q5:VideoCaptureDevice">
                <q5:Index>0</q5:Index>
                <q5:Format>
                  <q5:FrameSize>
                    <q5:Width>1280</q5:Width>
                    <q5:Height>720</q5:Height>
                  </q5:FrameSize>
                  <q5:AverageFrameRate>30</q5:AverageFrameRate>
                  <q5:MaximumFrameRate>30</q5:MaximumFrameRate>
                  <q5:BitCount>24</q5:BitCount>
                </q5:Format>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="CombineLatest" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Sample" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="q3:ExpressionTransform">
              <q3:Expression>new(it.Item1.Item1 as Eye,it.Item1.Item2 as World,it.Item2 as Marker)</q3:Expression>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item2</Selector>
            </Expression>
            <Expression xsi:type="q4:CsvWriter">
              <q4:FileName>marker.csv</q4:FileName>
              <q4:Append>false</q4:Append>
              <q4:Overwrite>false</q4:Overwrite>
              <q4:Suffix>None</q4:Suffix>
              <q4:IncludeHeader>false</q4:IncludeHeader>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>TrackMarker</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="q3:PythonTransform">
                    <q3:Script>import clr
clr.AddReference("OpenCV.Net")
clr.AddReference("System.Core")
from OpenCV.Net import Point2f
from System.Linq import Enumerable

markerid = 345

@returns(Point2f)
def process(value):
  marker = Enumerable.FirstOrDefault(value.DetectedMarkers, lambda x:x.Id == markerid)
  if marker is None:
    return Point2f(float.NaN, float.NaN)
  return marker.Center</q3:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q7:DetectMarkers">
                      <q7:CameraParameters>worldCam.yml</q7:CameraParameters>
                      <q7:ThresholdMethod>AdaptiveThreshold</q7:ThresholdMethod>
                      <q7:Param1>7</q7:Param1>
                      <q7:Param2>7</q7:Param2>
                      <q7:MinSize>0.04</q7:MinSize>
                      <q7:MaxSize>0.5</q7:MaxSize>
                      <q7:CornerRefinement>Lines</q7:CornerRefinement>
                      <q7:MarkerSize>10</q7:MarkerSize>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="q1:Grayscale" />
                  </Expression>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>4</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>1</From>
                    <To>0</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>3</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>20</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>0</From>
              <To>21</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>20</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>10</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>11</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>12</From>
              <To>10</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>13</From>
              <To>11</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>14</From>
              <To>12</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>15</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>15</From>
              <To>13</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>16</From>
              <To>15</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>17</From>
              <To>16</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>17</From>
              <To>15</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>18</From>
              <To>16</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>19</From>
              <To>18</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>20</From>
              <To>21</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>21</From>
              <To>27</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>21</From>
              <To>24</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>23</From>
              <To>22</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>24</From>
              <To>26</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>25</From>
              <To>27</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>26</From>
              <To>25</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>27</From>
              <To>23</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>StateTransitions</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Take">
                <Count>1</Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Throttle">
                <DueTime>PT5S</DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Marker</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Take">
                <Count>1</Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:PythonCondition">
                <q3:Script>from System import Single

def process(value):
  return not Single.IsNaN(value.X)</q3:Script>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Merge" />
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>7</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="TriggeredWindow">
          <Count xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Skip">
          <Count>1</Count>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>0</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>2</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Vision.VideoWriter, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.MatrixWriter, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.ImageWriter, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonSink, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timer, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Slice, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Video.VideoCaptureDevice, Bonsai.Video, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Sample, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Audio.AudioCapture, Bonsai.Audio, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Aruco.DetectMarkers, Bonsai.Aruco, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Take, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Throttle, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonCondition, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Merge, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.TriggeredWindow, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Skip, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>